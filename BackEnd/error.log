2024-07-07 22:50:12 error: User not found
2024-07-08 00:47:53 error: Error occurred while signing in user: 
Invalid `prisma.refreshToken.create()` invocation in
/home/zaid/Documents/store/BackEnd/src/controllers/auth.ts:34:55

  31 const accessToken = jwt.sign({ id: user.id,role:user.role }, process.env.JWT_SECRET as string, { expiresIn: "1d" });
  32 const refreshToken = jwt.sign({ id: user.id}, process.env.JWT_SECRET as string, { expiresIn: "7d" });
  33 
→ 34 const newRefreshToken = await prisma.refreshToken.create(
The provided value for the column is too long for the column's type. Column: accessToken
2024-07-08 00:47:55 error: Error occurred while signing in user: 
Invalid `prisma.refreshToken.create()` invocation in
/home/zaid/Documents/store/BackEnd/src/controllers/auth.ts:34:55

  31 const accessToken = jwt.sign({ id: user.id,role:user.role }, process.env.JWT_SECRET as string, { expiresIn: "1d" });
  32 const refreshToken = jwt.sign({ id: user.id}, process.env.JWT_SECRET as string, { expiresIn: "7d" });
  33 
→ 34 const newRefreshToken = await prisma.refreshToken.create(
The provided value for the column is too long for the column's type. Column: accessToken
2024-07-08 11:51:42 error: Error occurred while signing in user: 
Invalid `prisma.refreshToken.create()` invocation in
/home/zaid/Documents/store/BackEnd/src/controllers/auth.ts:34:55

  31 const accessToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "1d" });
  32 const refreshToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "7d" });
  33 
→ 34 const newRefreshToken = await prisma.refreshToken.create(
The provided value for the column is too long for the column's type. Column: refreshToken
2024-07-08 11:51:47 error: Error occurred while signing in user: 
Invalid `prisma.refreshToken.create()` invocation in
/home/zaid/Documents/store/BackEnd/src/controllers/auth.ts:34:55

  31 const accessToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "1d" });
  32 const refreshToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "7d" });
  33 
→ 34 const newRefreshToken = await prisma.refreshToken.create(
The provided value for the column is too long for the column's type. Column: refreshToken
2024-07-08 11:51:55 error: Error occurred while signing in user: 
Invalid `prisma.refreshToken.create()` invocation in
/home/zaid/Documents/store/BackEnd/src/controllers/auth.ts:34:55

  31 const accessToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "1d" });
  32 const refreshToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "7d" });
  33 
→ 34 const newRefreshToken = await prisma.refreshToken.create(
The provided value for the column is too long for the column's type. Column: refreshToken
2024-07-08 11:52:01 error: Error occurred while signing in user: 
Invalid `prisma.refreshToken.create()` invocation in
/home/zaid/Documents/store/BackEnd/src/controllers/auth.ts:34:55

  31 const accessToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "1d" });
  32 const refreshToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "7d" });
  33 
→ 34 const newRefreshToken = await prisma.refreshToken.create(
The provided value for the column is too long for the column's type. Column: refreshToken
2024-07-08 11:56:25 error: Error occurred while signing in user: 
Invalid `prisma.refreshToken.create()` invocation in
/home/zaid/Documents/store/BackEnd/src/controllers/auth.ts:34:55

  31 const accessToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "1d" });
  32 const refreshToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "7d" });
  33 
→ 34 const newRefreshToken = await prisma.refreshToken.create(
The provided value for the column is too long for the column's type. Column: refreshToken
2024-07-08 11:56:29 error: Error occurred while signing in user: 
Invalid `prisma.refreshToken.create()` invocation in
/home/zaid/Documents/store/BackEnd/src/controllers/auth.ts:34:55

  31 const accessToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "1d" });
  32 const refreshToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "7d" });
  33 
→ 34 const newRefreshToken = await prisma.refreshToken.create(
The provided value for the column is too long for the column's type. Column: refreshToken
2024-07-08 12:04:24 error: Error occurred while signing in user: 
Invalid `prisma.refreshToken.create()` invocation in
/home/zaid/Documents/store/BackEnd/src/controllers/auth.ts:34:55

  31 const accessToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "1d" });
  32 const refreshToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "7d" });
  33 
→ 34 const newRefreshToken = await prisma.refreshToken.create({
       data: {
         refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI4Mjc1MmY2OS1mY2EzLTQwZmMtYjVjYS0wY2FmYzhhNTc0NjgiLCJpYXQiOjE3MjA0MjU4NjQsImV4cCI6MTcyMTAzMDY2NH0.BqnNa_td0RvpvTW3pai0qUcCi4u49FrhjvDXjB-Yb44",
         accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI4Mjc1MmY2OS1mY2EzLTQwZmMtYjVjYS0wY2FmYzhhNTc0NjgiLCJpYXQiOjE3MjA0MjU4NjQsImV4cCI6MTcyMDUxMjI2NH0.7C0UpqzHUeMzLVePaS_CzWaef5pBiNE-j5oUumz5wmI",
     +   user: {
     +     create: UserCreateWithoutTokensInput | UserUncheckedCreateWithoutTokensInput,
     +     connectOrCreate: UserCreateOrConnectWithoutTokensInput,
     +     connect: UserWhereUniqueInput
     +   }
       }
     })

Argument `user` is missing.
2024-07-08 12:06:29 error: Error occurred while signing in user: 
Invalid `prisma.refreshToken.create()` invocation in
/home/zaid/Documents/store/BackEnd/src/controllers/auth.ts:34:55

  31 const accessToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "1d" });
  32 const refreshToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "7d" });
  33 
→ 34 const newRefreshToken = await prisma.refreshToken.create({
       data: {
         refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxODg2MzMxMi00ZTllLTQzZmYtODhiOS1hOWQxZThlMjMzYTciLCJpYXQiOjE3MjA0MjU5ODksImV4cCI6MTcyMTAzMDc4OX0.yAwPEjisoq8JVhWDWrKCCzbY6vj46ZCbVDu64N27l2g",
         accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxODg2MzMxMi00ZTllLTQzZmYtODhiOS1hOWQxZThlMjMzYTciLCJpYXQiOjE3MjA0MjU5ODksImV4cCI6MTcyMDUxMjM4OX0.jCBSzqGWOM0w4kHEE9SYBr2vYx9ZNHkWaMs-XNaymFE",
     +   user: {
     +     create: UserCreateWithoutTokensInput | UserUncheckedCreateWithoutTokensInput,
     +     connectOrCreate: UserCreateOrConnectWithoutTokensInput,
     +     connect: UserWhereUniqueInput
     +   }
       }
     })

Argument `user` is missing.
2024-07-08 12:06:56 error: Error occurred while signing in user: 
Invalid `prisma.refreshToken.create()` invocation in
/home/zaid/Documents/store/BackEnd/src/controllers/auth.ts:34:55

  31 const accessToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "1d" });
  32 const refreshToken = jwt.sign({ userId: user.id }, process.env.JWT_SECRET as string, { expiresIn: "7d" });
  33 
→ 34 const newRefreshToken = await prisma.refreshToken.create(
The provided value for the column is too long for the column's type. Column: refreshToken
2024-07-08 12:49:15 error: Error occurred while signing in user: 
Invalid `prisma.refreshToken.create()` invocation in
/home/zaid/Documents/store/BackEnd/src/controllers/auth.ts:34:55

  31 const accessToken = jwt.sign({ user: user }, process.env.JWT_SECRET as string, { expiresIn: "1d" });
  32 const refreshToken = jwt.sign({ id: user.id }, process.env.JWT_SECRET as string, { expiresIn: "7d" });
  33 
→ 34 const newRefreshToken = await prisma.refreshToken.create(
The provided value for the column is too long for the column's type. Column: accessToken
2024-07-08 12:49:16 error: Error occurred while signing in user: 
Invalid `prisma.refreshToken.create()` invocation in
/home/zaid/Documents/store/BackEnd/src/controllers/auth.ts:34:55

  31 const accessToken = jwt.sign({ user: user }, process.env.JWT_SECRET as string, { expiresIn: "1d" });
  32 const refreshToken = jwt.sign({ id: user.id }, process.env.JWT_SECRET as string, { expiresIn: "7d" });
  33 
→ 34 const newRefreshToken = await prisma.refreshToken.create(
The provided value for the column is too long for the column's type. Column: accessToken
2024-07-16 15:56:15 error: Error occurred while signing in user: 
Invalid `prisma.user.findFirst()` invocation in
/home/zaid/Documents/store/store/BackEnd/src/controllers/auth.ts:19:36

  16 logger.info("User attempting to sign in");
  17 
  18 try {
→ 19   const user = await prisma.user.findFirst(
Can't reach database server at `127.0.0.1:3306`

Please make sure your database server is running at `127.0.0.1:3306`.
2024-07-28 18:39:42 error: Invalid credentials
2024-07-28 18:39:52 error: Invalid credentials
2024-07-28 18:39:54 error: Invalid credentials
2024-07-28 18:44:02 error: Invalid credentials
2024-07-28 18:44:03 error: Invalid credentials
2024-08-05 18:05:56 error: Error occurred while signing in user: 
Invalid `prisma.user.findFirst()` invocation in
C:\Users\zaidh\Documents\GitHub\store\BackEnd\src\controllers\auth.ts:19:36

  16 logger.info("User attempting to sign in");
  17 
  18 try {
→ 19   const user = await prisma.user.findFirst(
Authentication failed against database server at `127.0.0.1`, the provided database credentials for `root` are not valid.

Please make sure to provide valid database credentials for the database server at `127.0.0.1`.
2024-08-06 02:06:05 error: User not found
